<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.dj.bms.dao.RoleMapper">
    <resultMap id="BaseResultMap" type="org.dj.bms.model.Role">
        <id column="ID" property="id" jdbcType="VARCHAR"/>
        <result column="ROLE_NAME" property="roleName" jdbcType="VARCHAR"/>
        <result column="ROLE_DESC" property="roleDesc" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    ID, ROLE_DESC, ROLE_NAME
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from ROLE
        where ID = #{id,jdbcType=VARCHAR}
    </select>
    <select id="findRoles" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ROLE
        <where>
            <if test="roleName != null and roleName != ''">
                AND NAME like CONCAT('%','${roleName}','%')
            </if>
            <if test="roleName != null and roleName != ''">
                AND NAME = #{roleDesc,jdbcType=VARCHAR}
            </if>
        </where>
    </select>

    <select id="findRoleListByUserId" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from ROLE R , USER_ROLE UR
        WHERE R.ID = UR.ROLE_ID
        AND UR.USER_ID= #{userId}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from ROLE
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByIds" parameterType="list">
        DELETE FROM ROLE
        WHERE ID IN
        <foreach collection="array" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <insert id="insert" parameterType="org.dj.bms.model.Role">
    insert into ROLE (ID, ROLE_DESC)
    values (#{id,jdbcType=VARCHAR}, #{roleDesc,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="org.dj.bms.model.Role">
        insert into ROLE
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                ID,
            </if>
            <if test="roleDesc != null">
                ROLE_DESC,
            </if>
            <if test="roleName != null">
                ROLE_NAME
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="roleDesc != null">
                #{roleDesc,jdbcType=VARCHAR},
            </if>
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="org.dj.bms.model.Role">
        update ROLE
        <set>
            <if test="roleDesc != null">
                ROLE_DESC = #{roleDesc,jdbcType=VARCHAR},
            </if>
            <if test="roleName != null">
                ROLE_NAME = #{roleName,jdbcType=VARCHAR}
            </if>
        </set>
        where ID = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.dj.bms.model.Role">
    update ROLE
    set ROLE_NAME = #{roleName,jdbcType=VARCHAR}, ROLE_DESC = #{roleDesc,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>