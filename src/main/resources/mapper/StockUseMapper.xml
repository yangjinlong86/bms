<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.dj.bms.dao.StockUseMapper">
  <resultMap id="BaseResultMap" type="org.dj.bms.model.StockUse">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="STOCK_ID" jdbcType="VARCHAR" property="stockId" />
    <result column="CORP_ID" jdbcType="VARCHAR" property="corpId" />
    <result column="OUT_USER_ID" jdbcType="VARCHAR" property="outUserId" />
    <result column="OUT_COUNT" jdbcType="DECIMAL" property="outCount" />
    <result column="OUT_DATE" jdbcType="DATE" property="outDate" />
    <result column="COMMENT" jdbcType="VARCHAR" property="comment" />
    <result column="CREATE_USER_ID" jdbcType="VARCHAR" property="createUserId" />
    <result column="UPDATE_USER_ID" jdbcType="VARCHAR" property="updateUserId" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, STOCK_ID, CORP_ID, OUT_USER_ID, OUT_COUNT, OUT_DATE, `COMMENT`, CREATE_USER_ID, 
    UPDATE_USER_ID, CREATE_TIME, UPDATE_TIME
  </sql>
   <sql id="Column_List">
    ID, STOCK_ID, CORP_ID, OUT_USER_ID, OUT_COUNT, OUT_DATE, `COMMENT`
  </sql>
  
  <select id="select" parameterType="org.dj.bms.query.QueryInfo" resultMap="BaseResultMap">
  		select 
  			<include refid="Column_List" />
  		from
  			stock_use
  		<where>
  			<if test="corpId != null and corpId != ''">
  				and corp_id = #{corpId,jdbcType=VARCHAR}
  			</if>
  		</where>
  </select>
  <delete id="deleteByIds">
  	  delete from stock_use where id in
        <foreach close=")" collection="ids" index="index" item="id" open="(" separator=",">  
            #{id}  
        </foreach>  
  </delete>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from stock_use
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from stock_use
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="org.dj.bms.model.StockUse">
    insert into stock_use (ID, STOCK_ID, CORP_ID, 
      OUT_USER_ID, OUT_COUNT, OUT_DATE, 
      `COMMENT`, CREATE_USER_ID, UPDATE_USER_ID, 
      CREATE_TIME, UPDATE_TIME)
    values (#{id,jdbcType=VARCHAR}, #{stockId,jdbcType=VARCHAR}, #{corpId,jdbcType=VARCHAR}, 
      #{outUserId,jdbcType=VARCHAR}, #{outCount,jdbcType=DECIMAL}, #{outDate,jdbcType=DATE}, 
      #{comment,jdbcType=VARCHAR}, #{createUserId,jdbcType=VARCHAR}, #{updateUserId,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.dj.bms.model.StockUse">
    insert into stock_use
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="stockId != null">
        STOCK_ID,
      </if>
      <if test="corpId != null">
        CORP_ID,
      </if>
      <if test="outUserId != null">
        OUT_USER_ID,
      </if>
      <if test="outCount != null">
        OUT_COUNT,
      </if>
      <if test="outDate != null">
        OUT_DATE,
      </if>
      <if test="comment != null">
        `COMMENT`,
      </if>
      <if test="createUserId != null">
        CREATE_USER_ID,
      </if>
      <if test="updateUserId != null">
        UPDATE_USER_ID,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="stockId != null">
        #{stockId,jdbcType=VARCHAR},
      </if>
      <if test="corpId != null">
        #{corpId,jdbcType=VARCHAR},
      </if>
      <if test="outUserId != null">
        #{outUserId,jdbcType=VARCHAR},
      </if>
      <if test="outCount != null">
        #{outCount,jdbcType=DECIMAL},
      </if>
      <if test="outDate != null">
        #{outDate,jdbcType=DATE},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.dj.bms.model.StockUse">
    update stock_use
    <set>
      <if test="stockId != null">
        STOCK_ID = #{stockId,jdbcType=VARCHAR},
      </if>
      <if test="corpId != null">
        CORP_ID = #{corpId,jdbcType=VARCHAR},
      </if>
      <if test="outUserId != null">
        OUT_USER_ID = #{outUserId,jdbcType=VARCHAR},
      </if>
      <if test="outCount != null">
        OUT_COUNT = #{outCount,jdbcType=DECIMAL},
      </if>
      <if test="outDate != null">
        OUT_DATE = #{outDate,jdbcType=DATE},
      </if>
      <if test="comment != null">
        `COMMENT` = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        CREATE_USER_ID = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateUserId != null">
        UPDATE_USER_ID = #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.dj.bms.model.StockUse">
    update stock_use
    set STOCK_ID = #{stockId,jdbcType=VARCHAR},
      CORP_ID = #{corpId,jdbcType=VARCHAR},
      OUT_USER_ID = #{outUserId,jdbcType=VARCHAR},
      OUT_COUNT = #{outCount,jdbcType=DECIMAL},
      OUT_DATE = #{outDate,jdbcType=DATE},
      `COMMENT` = #{comment,jdbcType=VARCHAR},
      CREATE_USER_ID = #{createUserId,jdbcType=VARCHAR},
      UPDATE_USER_ID = #{updateUserId,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>